<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-LN+7fdVzj6u52u30Kp6M/trliBMCMKTyK833zpbD+pXdCLuTusPj697FH4R/5mcr" crossorigin="anonymous">
  <title>Multi-Step Job Application Form</title>
  <style>
    #multiStepForm {
      background-color: #fff;
      padding: 15px;
      border-radius: 15px;
      border: solid 1px #39a2f8;
      width: 100%;
      max-width: 1000px;
      margin: 30px auto;
    }

    #multiStepForm h5 {
      margin-bottom: 15px;
    }

    .step {
      display: none;
    }

    .step.active {
      display: block;
    }

    #form #div {
      border-bottom: 2px solid #808080;
      padding: 20px 0;
    }

    .form-group {
      margin-bottom: 15px;
    }

    label {
      display: block;
      margin-bottom: 5px;
      font-size: 15px !important;
      font-weight: 500;
    }

    input,
    select,
    textarea {
      width: 100%;
      padding: 8px;
      box-sizing: border-box;
      border: solid 1px #ccc;
      outline: none;
      border-radius: 8px;
    }

    .small-text {
      font-size: 0.8em;
      color: gray;
    }

    .next-step-button {
      background-color: #39a2f8;
      padding: 10px 30px;
      border-radius: 13px;
      font-size: 15px;
      font-weight: 500;
      border: solid 1px #39a2f8;
      transition: 0.5s all ease-in-out;
    }

    .back-step-button {
      background-color: #fff;
      color: #39a2f8;
      padding: 10px 30px;
      border-radius: 13px;
      font-size: 15px;
      font-weight: 500;
      border: solid 1px #39a2f8;
      transition: 0.5s all ease-in-out;
    }

    .add-experience-btn {
      color: #39a2f8;
      font-size: 17px;
      font-weight: 600;
      background-color: #fff;
      border: none;
    }
  </style>
</head>

<body>
  <div
    style="background-image: url('https://img.freepik.com/free-vector/ombre-blue-curve-light-blue-background_53876-173299.jpg?semt=ais_hybrid&w=740');background-size: cover;height:100px">
    <h3 class="p-4">Onboarding Form</h3>
  </div>
  <div class="container-fluid">
    <form id="multiStepForm" action="/jobForm/<%=data?.link %>" method="POST" enctype="multipart/form-data">
      <input type="hidden" name="link" value="<%=data?.link %>" />
      <!-- Step 1: Personal Details -->
      <div class="step active" id="step1">
        <h5>Step 1: Personal Details</h5>
        <div class="row">

          <div class="col-md-12 col-12">
            <div class="form-group"><label>Full Name:</label><input type="text" name="fullName" required></div>
          </div>
          <div class="col-md-6 col-12">
            <div class="form-group"><label>Father's Name:</label><input type="text" name="fatherName" required></div>
          </div>
          <div class="col-md-6 col-12">
            <div class="form-group"><label>Mother's Name:</label><input type="text" name="motherName" required></div>
          </div>
          <div class="col-md-12 col-12">
            <div class="form-group">
              <label>Email Address:</label>
              <input type="email" name="email" id="email" required pattern="[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,}$"
                title="Please enter a valid email address (e.g., user@example.com)" oninput="validateEmail(this)">
              <small id="emailError" class="text-danger d-none">Invalid email address</small>
            </div>
          </div>
          <!-- Mobile Number -->
          <div class="col-md-6 col-12">
            <div class="form-group">
              <label>Mobile Number:</label>
              <input type="text" name="number" class="form-control" pattern="[6-9]{1}[0-9]{9}" minlength="10"
                maxlength="10" required />
            </div>
          </div>

          <!-- Alternate Mobile Number -->
          <div class="col-md-6 col-12">
            <div class="form-group">
              <label>Alternate Mobile Number:</label>
              <input type="text" name="AlternateNumber" class="form-control " pattern="[6-9]{1}[0-9]{9}" minlength="10"
                maxlength="10" required />
            </div>
          </div>

          <!-- Father's Mobile Number -->
          <div class="col-md-6 col-12">
            <div class="form-group">
              <label>Father's Mobile Number:</label>
              <input type="text" name="fatherNumber" class="form-control " pattern="[6-9]{1}[0-9]{9}" minlength="10"
                maxlength="10" required />
            </div>
          </div>

          <!-- Mother's Mobile Number -->
          <div class="col-md-6 col-12">
            <div class="form-group">
              <label>Mother's Mobile Number:</label>
              <input type="text" name="motherNumber" class="form-control" pattern="[6-9]{1}[0-9]{9}" minlength="10"
                maxlength="10" required />
            </div>
          </div>

          <h5>Current Address</h5>
          <div class="col-md-12 col-12">
            <div class="form-group"><label>Current Address:</label><textarea name="currentAddress"></textarea></div>
          </div>
          <div class="col-md-4 col-12">
            <div class="form-group">
              <label for="state">State:</label>
              <select id="state" name="state" class="form-control" onchange="populateCities()">
                <option value="">-- Select State --</option>
              </select>
            </div>
          </div>
          <!-- City Dropdown -->
          <div class="col-md-4 col-12">
            <div class="form-group">
              <label>City:</label>
              <select id="city" name="currentCity" class="form-control">
                <option value="">-- Select City --</option>
              </select>
            </div>
          </div>
          <div class="col-md-4 col-12">
            <div class="form-group"><label>Pincode:</label><input type="text" name="currentPincode"></div>
          </div>


          <h5 class="mt-4">Permanent Address</h5>
          <div class="col-md-12 col-12">
            <div class="d-flex gap-2 align-items-center mb-3">
              <input type="checkbox" id="sameAddress" onclick="copyAddress()" style="width:15px">
              <label for="sameAddress" class="mb-0">Same as Current Address</label>
            </div>
          </div>
        </div>
        <!-- Permanent Address Section -->
        <div id="permanentAddressFields">
          <div class="row">
            <div class="col-md-12 col-12">
              <div class="form-group"><label>Address:</label><textarea name="permanentAddress"></textarea></div>
            </div>
            <div class="col-md-6 col-12">
              <div class="form-group"><label>City:</label>
                <select name="permanentCity">
                  <option value="Jaipur">Jaipur</option>
                </select>
              </div>
            </div>
            <div class="col-md-6 col-12">
              <div class="form-group"><label>Pincode:</label><input type="text" name="permanentPincode"></div>
            </div>
          </div>
        </div>


        <div class="mt-4">
          <button type="button" onclick="nextStep(1)" class="next-step-button">Next</button>
        </div>
      </div>

      <!-- Step 2: Document Uploading -->
      <div class="step" id="step2">
        <h5>Step 2: Document Uploading</h5>
        <div class="row">
          <div class="col-md-6 col-12">
            <div class="form-group">
              <label>Pan Card Front:</label>
              <div class="d-flex align-items-center gap-2">
                <input type="file" accept=".pdf, image/*" name="panFront" required onchange="showCheck(this)">
                <span class="check-icon text-success fw-bold" style="display: none;">&#10004;</span>
              </div>

            </div>
          </div>
          <div class="col-md-6 col-12">
            <div class="form-group"><label>Pan Card Back:</label>
              <div class="d-flex align-items-center gap-2"><input type="file" accept=".pdf, image/*" name="panBack"
                  required onchange="showCheck(this)">
                <span class="check-icon text-success fw-bold" style="display: none;">&#10004;</span>
              </div>
            </div>
          </div>
          <div class="col-md-6 col-12">
            <div class="form-group"><label>Aadhar Card Front:</label>
              <div class="d-flex align-items-center gap-2"><input type="file" accept=".pdf, image/*" name="aadharFront"
                  required onchange="showCheck(this)">
                <span class="check-icon text-success fw-bold" style="display: none;">&#10004;</span>
              </div>
            </div>
          </div>

          <div class="col-md-6 col-12">
            <div class="form-group"><label>Aadhar Card Back:</label>
              <div class="d-flex align-items-center gap-2"><input type="file" accept=".pdf, image/*" name="aadharBack"
                  required onchange="showCheck(this)">
                <span class="check-icon text-success fw-bold" style="display: none;">&#10004;</span>
              </div>
            </div>
          </div>
          <div class="col-md-6 col-12">
            <div class="form-group"><label>10th Marksheet:</label>
              <div class="d-flex align-items-center gap-2"><input type="file" accept=".pdf, image/*" name="marksheet10"
                  required onchange="showCheck(this)">
                <span class="check-icon text-success fw-bold" style="display: none;">&#10004;</span>
              </div>
            </div>
          </div>
          <div class="col-md-6 col-12">
            <div class="form-group"><label>12th Marksheet:</label>
              <div class="d-flex align-items-center gap-2">
                <input type="file" name="marksheet12" required accept=".pdf, image/*" onchange="showCheck(this)">
                <span class="check-icon text-success fw-bold" style="display: none;">&#10004;</span>
              </div>
            </div>
          </div>
          <div class="col-md-6 col-12">
            <div class="form-group">
              <label>Last Qualification:</label>
              <div class="d-flex align-items-center gap-2">
                <input type="text" name="lastQualification" required onchange="showCheck(this)">
                <span class="check-icon text-success fw-bold" style="display: none;">&#10004;</span>
              </div>
            </div>
          </div>

          <div class="col-md-6 col-12">
            <div class="form-group">
              <label>Upload Last Qualification Marksheet:</label>
              <div class="d-flex align-items-center gap-2">
                <input type="file" name="lastQualificationMarksheet" accept=".pdf, image/*" required
                  onchange="showCheck(this)">
                <span class="check-icon text-success fw-bold" style="display: none;">&#10004;</span>
              </div>
            </div>
          </div>

          <div class="col-md-12 col-12">
            <div class="form-group">
              <label>Are you:</label>
              <div class="d-flex gap-2 align-items-center">
                <div class="d-flex gap-2 align-items-center"><input type="radio" name="experienceType" value="fresher"
                    onclick="toggleExperience(true)"> <span>Fresher</span></div>
                <div class="d-flex gap-2 align-items-center"><input type="radio" name="experienceType"
                    value="experienced" onclick="toggleExperience(false)"> <span>Experienced</span></div>
              </div>

            </div>

          </div>
        </div>
        <div class="mt-4">
          <button type="button" onclick="prevStep(0)" class="back-step-button">Back</button>
          <button type="button" onclick="nextStep(2)" class="next-step-button">Next</button>
        </div>
      </div>

      <!-- Step 3: Professional Background -->
      <div class="step" id="step3">
        <h5>Step 3: Professional Background</h5>
        <div id="fresherSection" style="display: none;">
          <label>Upload Your CV:</label>
          <input type="file" name="fresherCV" accept=".pdf">
          <div class="small-text">*pdf</div>
        </div>

        <div id="experience-container">
          <!-- Resume Upload -->
          <div class="mb-3  mt-5">
            <label>Upload Your CV/Resume</label>
            <input type="file" name="resume" class="form-control" accept=".pdf">
            <small class="form-text text-muted">*pdf</small>
          </div>

          <button type="button" class="btn btn-secondary mb-3" onclick="addExperience()">+ Add Experience</button>
          <h4>Experience</h4>

          <div id="form">

          </div>

        </div>
        <div class="mt-4">
          <button type="button" onclick="prevStep(1)" class="back-step-button">Back</button>
          <button type="button" onclick="nextStep(3)" class="next-step-button">Next</button>
        </div>
      </div>


      <!-- Step 4: Job Role in A2G -->
      <div class="step" id="step4">
        <h5>Step 4: Job Role in <%= data?.job?.companyName || "Company" %>
        </h5>

        <div class="company-header-container mb-3">
          <img src="/images/<%= data?.job?.logo %>" alt="company-logo" style="width:100%;max-width: 150px;object-fit:
          cover;">
        </div>

        <div class="row">
          <div class="col-md-6 col-12">
            <div class="form-group">
              <label>Job Profile:</label>
              <input type="text" name="jobProfile" class="form-control" value="<%= data?.job?.jobRole %>" readonly>
            </div>
          </div>

          <div class="col-md-6 col-12">
            <div class="form-group">
              <label>Salary Offered:</label>
              <input type="text" name="salary" class="form-control" value="<%= data?.job?.OfferedSalary %>" readonly>
            </div>
          </div>

          <div class="col-md-12 col-12">
            <div class="form-group">
              <label>Referred by (HR Name):</label>
              <input type="text" name="referredBy" class="form-control" value="<%= data?.job?.hrName %>" readonly>
            </div>
          </div>

          <div class="col-md-6 col-12">
            <div class="form-group">
              <label>Interview Date:</label>
              <input type="text" name="interviewDate" class="form-control" value="<%= data?.job?.date %>" readonly>
            </div>
          </div>

          <div class="col-md-6 col-12">
            <div class="form-group">
              <label>Interview Type:</label>
              <input type="text" name="interviewType" class="form-control" value="<%= data?.job?.interviewType %>"
                readonly>
            </div>
          </div>
        </div>

        <small>
          <input type="checkbox" id="agree" style="width:10px;"> I agree to the
          <a href="#" target="_blank">Privacy Policy</a> and
          <a href="#" target="_blank">Terms & Conditions</a>.
        </small>

        <div class="mt-4">
          <button type="button" onclick="prevStep(2)" class="back-step-button">Back</button>
          <button type="button" onclick="submitForm()" class="next-step-button">Submit</button>
        </div>
      </div>


    </form>
  </div>
  <!-- Popup -->
  <div id="popupAccept"
    style="display:none; position:fixed; top:0; left:0; right:0; bottom:0; background:rgba(0,0,0,0.5);padding:5px">
    <div style="background:#fff; margin:100px auto; padding:20px; width:100%;max-width: 500px;">
      <div class="text-center">
        <img src="https://cdn2.iconfinder.com/data/icons/greenline/512/check-512.png" alt="icon"
          style="width:100%;max-width: 80px;">
        <h5 class="mt-3 mb-4">Your form has been submitted. Our HR will contact you soon.</h5>
      </div>
      <div><button class="next-step-button w-100 mt-3">Submit</button></div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-ndDqU0Gzau9qJ1lfW4pNLlhNTkCfHzAVBReH9diLvGRem5+R9g2FzA8ZGN954O5Q"
    crossorigin="anonymous"></script>
  <script>
    let currentStep = 0;
    const steps = document.querySelectorAll('.step');

    function nextStep(index) {


      const number = document.getElementsByName("number").value
      steps[currentStep].classList.remove('active');
      currentStep = index;
      steps[currentStep].classList.add('active');
    }

    function prevStep(index) {
      steps[currentStep].classList.remove('active');
      currentStep = index;
      steps[currentStep].classList.add('active');
    }

    function copyAddress() {
      if (document.getElementById('sameAddress').checked) {
        document.querySelector('[name="permanentAddress"]').value = document.querySelector('[name="currentAddress"]').value;
        document.querySelector('[name="permanentCity"]').value = document.querySelector('[name="currentCity"]').value;
        document.querySelector('[name="permanentPincode"]').value = document.querySelector('[name="currentPincode"]').value;
      } else {
        document.querySelector('[name="permanentAddress"]').value = "";
        document.querySelector('[name="permanentCity"]').value = "";
        document.querySelector('[name="permanentPincode"]').value = "";
      }
    }

    function toggleExperience(isFresher) {
      document.getElementById('fresherSection').style.display = isFresher ? 'block' : 'none';
      document.getElementById('experience-container').style.display = isFresher ? 'none' : 'block';

      if (!isFresher) {
        addExperience();
      }
    }

    let expIndex = 0;

    function addExperience() {
      const container = document.getElementById('form');

      const html = `
<div class="experience-wrapper mb-3" id="experience-${expIndex}">
  <div class="row g-3 experience-group">
    <div class="col-md-6">
      <label>Company Name:</label>
      <input type="text" name="experiences[${expIndex}][companyName]" class="form-control" placeholder="Enter company name" required />
    </div>
    <div class="col-md-6">
      <label>Job Role/Position:</label>
      <input type="text" name="experiences[${expIndex}][jobRole]" class="form-control" placeholder="Enter job role" required />
    </div>

    <div class="col-md-6">
      <label>Location:</label>
      <input type="text" name="experiences[${expIndex}][location]" class="form-control" placeholder="Enter location" required />
    </div>

    <div class="col-md-3">
      <label>Joining Date:</label>
      <input type="date" name="experiences[${expIndex}][joiningDate]" class="form-control" id="joiningDate-${expIndex}" required onchange="calculateExperience(${expIndex})" />
    </div>

    <div class="col-md-3">
      <label>End Date:</label>
      <input type="date" name="experiences[${expIndex}][endDate]" class="form-control" id="endDate-${expIndex}" required onchange="calculateExperience(${expIndex})" />
    </div>

    <div class="col-md-12">
      <label>Total Experience (YEAR, MONTH):</label>
      <input type="text" name="experiences[${expIndex}][experienceDays]" class="form-control" id="experienceResult-${expIndex}" placeholder="e.g. 2 YEAR, 3 MONTH" required readonly />
    </div>

    <div class="col-md-12 text-end">
      <button type="button" class="btn btn-danger btn-sm" onclick="removeExperience(this)">Remove Experience</button>
    </div>
  </div>
</div>
`;

      container.insertAdjacentHTML('beforeend', html);
      expIndex++;
    }

    function removeExperience(button) {
      const wrapper = button.closest('.experience-wrapper');
      if (wrapper) {
        wrapper.remove();
      }
    }



    function showPopup() {
      document.getElementById('popupAccept').style.display = 'block';
    }

    function copyAddress() {
      const isChecked = document.getElementById('sameAddress').checked;
      const permanentFields = document.getElementById('permanentAddressFields');

      if (isChecked) {
        document.querySelector('[name="permanentAddress"]').value = document.querySelector('[name="currentAddress"]').value;
        document.querySelector('[name="permanentCity"]').value = document.querySelector('[name="currentCity"]').value;
        document.querySelector('[name="permanentPincode"]').value = document.querySelector('[name="currentPincode"]').value;
        permanentFields.style.display = 'none';
      } else {
        document.querySelector('[name="permanentAddress"]').value = "";
        document.querySelector('[name="permanentCity"]').value = "";
        document.querySelector('[name="permanentPincode"]').value = "";
        permanentFields.style.display = 'block';
      }
    }

    // Ensure initial state is correct without using onload
    document.addEventListener('DOMContentLoaded', function () {
      copyAddress();
    });
  </script>
  <!-- email validation -->
  <script>
    function validateEmail(input) {
      const emailPattern = /^[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,}$/i;
      const error = document.getElementById('emailError');

      if (!emailPattern.test(input.value)) {
        error.classList.remove('d-none');
      } else {
        error.classList.add('d-none');
      }
    }
  </script>

  <script>
    const pathParts = window.location.pathname.split('/');
    const link = pathParts[pathParts.length - 1];
    async function submitForm() {
      const agree = document.getElementById('agree');
      if (!agree.checked) {
        alert('Please agree to the Privacy Policy and Terms & Conditions.');
        return;
      }
      const form = document.getElementById('multiStepForm');
      console.log("form--->", form)
      const formData = new FormData(form);
      console.log("formData--->", formData)
      try {
        const response = await fetch(`/jobForm/${link}`, {
          method: 'POST',
          body: formData,
        });

        const result = await response.json();

        if (result.status) {
          form.reset(); // Clear form after successful submission
          showPopup()
          setTimeout(() => window.location.reload(), 3000)
        } else {
          alert(result.message || 'Something went wrong. Try again.');
        }
      } catch (error) {
        console.error('Submission error:', error);
        alert('An error occurred. Please try again.');
      }
    }

    function nextStep(index) {
      const currentForm = steps[currentStep]; // Current step's element
      const requiredFields = currentForm.querySelectorAll('input[required], select[required], textarea[required]');
      let isValid = true;

      // Regular expression for 10-digit mobile number starting with 6-9
      const mobileRegex = /^[6-9]\d{9}$/;
      const emailField = document.getElementById('email');
      const emailPattern = /^[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,}$/i;

      // Check all required fields
      requiredFields.forEach(field => {
        const value = field.value.trim();
        const name = field.name;

        if (!value) {
          field.style.border = "1px solid red";
          isValid = false;
        } else if (
          (name === 'number' || name === 'AlternateNumber' || name === 'fatherNumber' || name === 'motherNumber') &&
          !mobileRegex.test(value)
        ) {
          field.style.border = "1px solid red";
          isValid = false;
        } else {
          field.style.border = "1px solid #ccc";
        }
      });

      // Extra check for email validity
      if (emailField && !emailPattern.test(emailField.value)) {
        emailField.style.border = "1px solid red";
        document.getElementById('emailError').classList.remove('d-none');
        isValid = false;
      }

      if (!isValid) {
        alert("Please fill all required fields correctly before proceeding.");
        return;
      }

      // Proceed to next step
      steps[currentStep].classList.remove('active');
      currentStep = index;
      steps[currentStep].classList.add('active');
    }
  </script>

  <script>
    function showCheck(input) {
      const checkIcon = input.nextElementSibling;
      if (input.files && input.files.length > 0) {
        checkIcon.style.display = "inline-block";
      } else {
        checkIcon.style.display = "none";
      }
    }
  </script>

  <script>
    function calculateExperience(index) {
      const joiningDate = document.getElementById(`joiningDate-${index}`).value;
      const endDate = document.getElementById(`endDate-${index}`).value;

      if (!joiningDate || !endDate) return;

      const start = new Date(joiningDate);
      const end = new Date(endDate);

      if (end < start) {
        document.getElementById(`experienceResult-${index}`).value = "Invalid date range";
        return;
      }

      let years = end.getFullYear() - start.getFullYear();
      let months = end.getMonth() - start.getMonth();

      if (months < 0) {
        years--;
        months += 12;
      }

      document.getElementById(`experienceResult-${index}`).value = `${years} YEAR${years !== 1 ? 'S' : ''}, ${months} MONTH${months !== 1 ? 'S' : ''}`;
    }
  </script>
  <script>
    function showCheck(input) {
      const checkIcon = input.nextElementSibling;

      // Allowed MIME types
      const allowedTypes = [
        "application/pdf",
        "image/jpeg",
        "image/jpg",
        "image/png",
        "image/gif",
        "image/webp"
      ];

      if (input.files && input.files.length > 0) {
        const file = input.files[0];

        if (!allowedTypes.includes(file.type)) {
          alert(" Only PDF and image files (jpg, png, gif, webp) are allowed.");
          input.value = ""; // Clear the invalid file
          checkIcon.style.display = "none";
          return;
        }

        // If file type is allowed
        checkIcon.style.display = "inline-block";
      } else {
        checkIcon.style.display = "none";
      }
    }
  </script>



  <script>
    // 1. State -> City Mapping
    const stateCityMap = {
      "Andhra Pradesh": ["Visakhapatnam", "Vijayawada", "Guntur", "Nellore", "Kurnool"],
      "Arunachal Pradesh": ["Itanagar", "Tawang", "Ziro", "Pasighat", "Bomdila"],
      "Assam": ["Guwahati", "Dibrugarh", "Silchar", "Jorhat", "Tezpur"],
      "Bihar": ["Patna", "Gaya", "Bhagalpur", "Muzaffarpur", "Purnia"],
      "Chhattisgarh": ["Raipur", "Bhilai", "Bilaspur", "Korba", "Durg"],
      "Goa": ["Panaji", "Margao", "Vasco da Gama", "Mapusa", "Ponda"],
      "Gujarat": ["Ahmedabad", "Surat", "Vadodara", "Rajkot", "Bhavnagar"],
      "Haryana": ["Gurgaon", "Faridabad", "Panipat", "Ambala", "Karnal"],
      "Himachal Pradesh": ["Shimla", "Manali", "Dharamshala", "Solan", "Mandi"],
      "Jharkhand": ["Ranchi", "Jamshedpur", "Dhanbad", "Bokaro", "Hazaribagh"],
      "Karnataka": ["Bengaluru", "Mysuru", "Hubli", "Mangaluru", "Belgaum"],
      "Kerala": ["Thiruvananthapuram", "Kochi", "Kozhikode", "Thrissur", "Alappuzha"],
      "Madhya Pradesh": ["Bhopal", "Indore", "Jabalpur", "Gwalior", "Ujjain"],
      "Maharashtra": ["Mumbai", "Pune", "Nagpur", "Nashik", "Aurangabad"],
      "Manipur": ["Imphal", "Thoubal", "Bishnupur", "Kakching", "Churachandpur"],
      "Meghalaya": ["Shillong", "Tura", "Nongpoh", "Baghmara", "Williamnagar"],
      "Mizoram": ["Aizawl", "Lunglei", "Champhai", "Serchhip", "Kolasib"],
      "Nagaland": ["Kohima", "Dimapur", "Mokokchung", "Tuensang", "Zunheboto"],
      "Odisha": ["Bhubaneswar", "Cuttack", "Rourkela", "Sambalpur", "Puri"],
      "Punjab": ["Ludhiana", "Amritsar", "Jalandhar", "Patiala", "Bathinda"],
      "Rajasthan": ["Jaipur", "Jodhpur", "Udaipur", "Ajmer", "Bikaner"],
      "Sikkim": ["Gangtok", "Namchi", "Gyalshing", "Mangan", "Rangpo"],
      "Tamil Nadu": ["Chennai", "Coimbatore", "Madurai", "Tiruchirappalli", "Salem"],
      "Telangana": ["Hyderabad", "Warangal", "Nizamabad", "Karimnagar", "Khammam"],
      "Tripura": ["Agartala", "Udaipur", "Dharmanagar", "Kailasahar", "Belonia"],
      "Uttar Pradesh": ["Lucknow", "Kanpur", "Varanasi", "Agra", "Noida"],
      "Uttarakhand": ["Dehradun", "Haridwar", "Haldwani", "Nainital", "Rishikesh"],
      "West Bengal": ["Kolkata", "Howrah", "Durgapur", "Asansol", "Siliguri"],
      "Andaman and Nicobar Islands": ["Port Blair", "Diglipur", "Rangat", "Mayabunder"],
      "Chandigarh": ["Chandigarh"],
      "Dadra and Nagar Haveli and Daman and Diu": ["Silvassa", "Daman", "Diu"],
      "Delhi": ["New Delhi", "Dwarka", "Rohini", "Saket", "Karol Bagh"],
      "Jammu and Kashmir": ["Srinagar", "Jammu", "Anantnag", "Baramulla", "Udhampur"],
      "Ladakh": ["Leh", "Kargil"],
      "Lakshadweep": ["Kavaratti", "Agatti", "Minicoy", "Andrott"],
      "Puducherry": ["Puducherry", "Karaikal", "Mahe", "Yanam"]
    };

    // 2. Populate State Dropdown
    const stateSelect = document.getElementById("state");
    const citySelect = document.getElementById("city");

    Object.keys(stateCityMap).forEach(state => {
      const option = document.createElement("option");
      option.value = state;
      option.textContent = state;
      stateSelect.appendChild(option);
    });

    // 3. Populate Cities on State Change
    function populateCities() {
      const selectedState = stateSelect.value;

      // Clear previous cities
      citySelect.innerHTML = '<option value="">-- Select City --</option>';

      if (selectedState && stateCityMap[selectedState]) {
        stateCityMap[selectedState].forEach(city => {
          const option = document.createElement("option");
          option.value = city;
          option.textContent = city;
          citySelect.appendChild(option);
        });
      }
    }
  </script>
</body>

</html>